<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="chat_mapper">

    <insert id="insert_chatroom_m" parameterType="ChatDto">
        insert into chatroom_m (room_id, master, status)
        values (room_id_seq.NEXTVAL, #{sender}, 0)
    </insert>

    <insert id="insert_chatroom_d" parameterType="ChatDto">
        insert into chatroom_d (room_id, member)
        values (#{roomId}, #{sender})
    </insert>

    <insert id="insert_chat" parameterType="ChatDto">
        insert into chat (chat_id, room_id, sender, content, type, time_stamp)
        values (chat_id_seq.NEXTVAL, #{roomId}, #{sender}, #{content}, #{type}, TO_DATE(#{timeStamp}, 'YYYY-MM-DD HH24:MI:SS'))
    </insert>

    <insert id="insert_chat_r" parameterType="ChatDto">
        insert into chat_r (room_id, chat_id, member)
        values (#{roomId}, #{chatId}, #{sender})
    </insert>

    <select id="select_all_chatroom" resultType="ChatRoomDto">
        SELECT m.room_id, m.master, m.status, NVL(c.content, '새로운 채팅방') AS content
        FROM chatroom_m m
                 LEFT JOIN (
            SELECT room_id, content
            FROM chat
            WHERE (room_id, chat_id) IN (
                SELECT room_id, MAX(chat_id)
                FROM chat
                WHERE type = 'text'
                GROUP BY room_id)
        ) c ON m.room_id = c.room_id
        ORDER BY m.room_id
    </select>

    <select id="select_chatroom_by_id" resultType="ChatRoomDto" parameterType="Integer">
        select *
        from chatroom_m
        where room_id = #{value}
    </select>

    <select id="select_all_chat_by_roomid" resultType="ChatDto" parameterType="Integer">
        select *
        from chat
        where room_id = #{value}
    </select>


</mapper>
