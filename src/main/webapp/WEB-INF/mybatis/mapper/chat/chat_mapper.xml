<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="chat_mapper">

    <!--    insert to chat 테이블-->
    <insert id="insert_chat" parameterType="ChatDto">
        <selectKey resultType="Integer" keyProperty="chatId" order="BEFORE">
            select chat_id_seq.NEXTVAL from dual
        </selectKey>
        insert all
            into chat (chat_id, room_id, sender, content, type, time_stamp)
                values (#{chatId}, #{roomId}, #{sender}, #{content}, #{type}, TO_DATE(#{timeStamp}, 'YYYY-MM-DD HH24:MI:SS'))
            into chat_r (room_id, chat_id, member)
                values (#{roomId}, #{chatId}, #{sender})
        select * from dual
    </insert>

<!--    insert to chat_r 테이블-->
    <insert id="insert_chat_r" parameterType="ChatDto">
        insert into chat_r (room_id, chat_id, member)
        values (#{roomId}, #{chatId}, #{sender})
    </insert>

<!--    plan_id로 모든 채팅내역 가져오기-->
    <select id="select_all_chat_by_plan_id" resultType="ChatDto" parameterType="int">
        select * from chat where room_id = #{value}
    </select>

<!-- userId가 참여중인 모든 모집방 id로 마지막 채팅정보 가져오기-->
    <select id="select_all_last_chats_by_user_id" resultType="ChatDto" parameterType="String">
        SELECT c.chat_id, c.room_id, c.sender, c.content, c.type, c.time_stamp, j.title
        FROM chat c
                 JOIN join_board_member jbm ON c.room_id = jbm.plan_id
                 JOIN (SELECT room_id, MAX(chat_id) AS max_chat_id
                       FROM chat
                       WHERE type = 'text'
                       GROUP BY room_id) subq ON c.room_id = subq.room_id AND c.chat_id = subq.max_chat_id
                 JOIN join_board j ON j.plan_id = jbm.plan_id
        WHERE jbm.user_id = #{value}
        ORDER BY c.room_id
    </select>

<!--    채팅방 id로 채팅별로 안 읽은 갯수가져오기-->
    <select id="select_unread_chat_by_plan_id" parameterType="int" resultType="ChatDto">
        select chat_id, (select COUNT(*)
                         from join_board_member
                         where plan_id = #{roomId})-COUNT(member) as un_read
        from chat_r
        where room_id = #{roomId}
        GROUP BY chat_id
        ORDER BY chat_id
    </select>


<!--    내 아이디, 채팅방id로 모든채팅 읽음처리 (특정 채팅방 입장시)-->
    <insert id="update_chat_to_read_by_chatdto" parameterType="ChatDto">
        insert into chat_r
        select room_id, chat_id, #{sender} as member
        from chat
        where room_id = #{roomId}
        and chat_id not in (select chat_id
                         from chat_r
                         where member = #{sender})
    </insert>

</mapper>
